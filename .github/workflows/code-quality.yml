name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install quality tools
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install black isort flake8 mypy pylint bandit safety pre-commit
        
    - name: Run Black formatter check
      run: |
        black --check --diff src/ tests/
        
    - name: Run isort import sorting check
      run: |
        isort --check-only --diff src/ tests/
        
    - name: Run flake8 linting
      run: |
        flake8 src/ tests/ --statistics --count
        
    - name: Run MyPy type checking
      run: |
        mypy src/ --ignore-missing-imports --strict-optional
        
    - name: Run Pylint analysis
      run: |
        pylint src/ --output-format=text --reports=no --score=yes
        
    - name: Run Bandit security analysis
      run: |
        bandit -r src/ -ll
        
    - name: Check dependencies for vulnerabilities
      run: |
        safety check
        
    - name: Generate code quality report
      run: |
        echo "# Code Quality Report" > code_quality_report.md
        echo "Generated on: $(date)" >> code_quality_report.md
        echo "" >> code_quality_report.md
        
        echo "## Linting Results" >> code_quality_report.md
        flake8 src/ --statistics >> code_quality_report.md 2>&1 || true
        
        echo "## Type Checking Results" >> code_quality_report.md
        mypy src/ --ignore-missing-imports >> code_quality_report.md 2>&1 || true
        
        echo "## Security Analysis Results" >> code_quality_report.md
        bandit -r src/ -f txt >> code_quality_report.md 2>&1 || true
        
    - name: Upload code quality report
      uses: actions/upload-artifact@v3
      with:
        name: code-quality-report
        path: code_quality_report.md

  complexity-analysis:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install analysis tools
      run: |
        python -m pip install --upgrade pip
        pip install radon xenon mccabe
        
    - name: Analyze code complexity
      run: |
        echo "# Code Complexity Analysis" > complexity_report.md
        echo "Generated on: $(date)" >> complexity_report.md
        echo "" >> complexity_report.md
        
        echo "## Cyclomatic Complexity" >> complexity_report.md
        radon cc src/ -a >> complexity_report.md
        
        echo "## Maintainability Index" >> complexity_report.md
        radon mi src/ >> complexity_report.md
        
        echo "## Raw Metrics" >> complexity_report.md
        radon raw src/ >> complexity_report.md
        
        echo "## Halstead Metrics" >> complexity_report.md
        radon hal src/ >> complexity_report.md
        
    - name: Check complexity thresholds
      run: |
        # Fail if complexity is too high
        xenon --max-absolute B --max-modules A --max-average A src/
        
    - name: Upload complexity report
      uses: actions/upload-artifact@v3
      with:
        name: complexity-report
        path: complexity_report.md

  documentation-quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install documentation tools
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pydocstyle doc8 interrogate
        
    - name: Check docstring style
      run: |
        pydocstyle src/ --explain --source
        
    - name: Check documentation coverage
      run: |
        interrogate src/ --verbose --fail-under=80
        
    - name: Generate documentation quality report
      run: |
        echo "# Documentation Quality Report" > doc_quality_report.md
        echo "Generated on: $(date)" >> doc_quality_report.md
        echo "" >> doc_quality_report.md
        
        echo "## Docstring Coverage" >> doc_quality_report.md
        interrogate src/ --verbose >> doc_quality_report.md 2>&1 || true
        
        echo "## Docstring Style Issues" >> doc_quality_report.md
        pydocstyle src/ >> doc_quality_report.md 2>&1 || true
        
    - name: Upload documentation quality report
      uses: actions/upload-artifact@v3
      with:
        name: documentation-quality-report
        path: doc_quality_report.md
